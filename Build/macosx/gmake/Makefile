# GNU Make solution makefile autogenerated by Premake

.NOTPARALLEL:

ifndef config
  config=debug_x32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x32)
  googlemock_config = debug_x32
  googlemock_main_config = debug_x32
  dicpp_config = debug_x32
  test_ioc_cpp_config = debug_x32
endif
ifeq ($(config),debug_x64)
  googlemock_config = debug_x64
  googlemock_main_config = debug_x64
  dicpp_config = debug_x64
  test_ioc_cpp_config = debug_x64
endif
ifeq ($(config),debug_native)
  googlemock_config = debug_native
  googlemock_main_config = debug_native
  dicpp_config = debug_native
  test_ioc_cpp_config = debug_native
endif
ifeq ($(config),release_x32)
  googlemock_config = release_x32
  googlemock_main_config = release_x32
  dicpp_config = release_x32
  test_ioc_cpp_config = release_x32
endif
ifeq ($(config),release_x64)
  googlemock_config = release_x64
  googlemock_main_config = release_x64
  dicpp_config = release_x64
  test_ioc_cpp_config = release_x64
endif
ifeq ($(config),release_native)
  googlemock_config = release_native
  googlemock_main_config = release_native
  dicpp_config = release_native
  test_ioc_cpp_config = release_native
endif

PROJECTS := googlemock googlemock-main dicpp test_ioc_cpp

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

googlemock:
ifneq (,$(googlemock_config))
	@echo "==== Building googlemock ($(googlemock_config)) ===="
	@${MAKE} --no-print-directory -C . -f googlemock.make config=$(googlemock_config)
endif

googlemock-main:
ifneq (,$(googlemock_main_config))
	@echo "==== Building googlemock-main ($(googlemock_main_config)) ===="
	@${MAKE} --no-print-directory -C . -f googlemock-main.make config=$(googlemock_main_config)
endif

dicpp:
ifneq (,$(dicpp_config))
	@echo "==== Building dicpp ($(dicpp_config)) ===="
	@${MAKE} --no-print-directory -C . -f dicpp.make config=$(dicpp_config)
endif

test_ioc_cpp: googlemock googlemock-main dicpp
ifneq (,$(test_ioc_cpp_config))
	@echo "==== Building test_ioc_cpp ($(test_ioc_cpp_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_ioc_cpp.make config=$(test_ioc_cpp_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f googlemock.make clean
	@${MAKE} --no-print-directory -C . -f googlemock-main.make clean
	@${MAKE} --no-print-directory -C . -f dicpp.make clean
	@${MAKE} --no-print-directory -C . -f test_ioc_cpp.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x32"
	@echo "  debug_x64"
	@echo "  debug_native"
	@echo "  release_x32"
	@echo "  release_x64"
	@echo "  release_native"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   googlemock"
	@echo "   googlemock-main"
	@echo "   dicpp"
	@echo "   test_ioc_cpp"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
